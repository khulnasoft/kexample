{"version":"2","toolVersion":"1.84.0","snippets":{"56c4aa9224ad8a472f163d4cd67d17c724205714dbda8006fe4982a44a43ab1b":{"translations":{"python":{"source":"# Alarm must be configured with an EC2 per-instance metric\n# alarm: cloudwatch.Alarm\n\n# Attach a reboot when alarm triggers\nalarm.add_alarm_action(\n    actions.Ec2Action(actions.Ec2InstanceAction.REBOOT))","version":"2"},"csharp":{"source":"// Alarm must be configured with an EC2 per-instance metric\nAlarm alarm;\n\n// Attach a reboot when alarm triggers\nalarm.AddAlarmAction(\nnew Ec2Action(Ec2InstanceAction.REBOOT));","version":"1"},"java":{"source":"// Alarm must be configured with an EC2 per-instance metric\nAlarm alarm;\n\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\nnew Ec2Action(Ec2InstanceAction.REBOOT));","version":"1"},"go":{"source":"// Alarm must be configured with an EC2 per-instance metric\nvar alarm alarm\n\n// Attach a reboot when alarm triggers\nalarm.AddAlarmAction(\nactions.NewEc2Action(actions.Ec2InstanceAction_REBOOT))","version":"1"},"$":{"source":"// Alarm must be configured with an EC2 per-instance metric\ndeclare const alarm: cloudwatch.Alarm;\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\n  new actions.Ec2Action(actions.Ec2InstanceAction.REBOOT),\n);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cloudwatch-actions"},"field":{"field":"markdown","line":26}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.Ec2Action","@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction","@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction#REBOOT","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// Alarm must be configured with an EC2 per-instance metric\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\n  new actions.Ec2Action(actions.Ec2InstanceAction.REBOOT),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":10,"130":1,"153":1,"169":1,"194":4,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"56fe0639fa78e1b1e51bdcf1bab9528e965e8a51e3f2403a494721833c6091c8"},"91b475871e62406690c88e1e2948bc6bd72312094cec3c3cf27eb1cc163dda3f":{"translations":{"python":{"source":"# alarm: cloudwatch.Alarm\n\n# Create an OpsItem with specific severity and category when alarm triggers\nalarm.add_alarm_action(\n    actions.SsmAction(actions.OpsItemSeverity.CRITICAL, actions.OpsItemCategory.PERFORMANCE))","version":"2"},"csharp":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"java":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"go":{"source":"var alarm alarm\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nactions.NewSsmAction(actions.OpsItemSeverity_CRITICAL, actions.OpsItemCategory_PERFORMANCE))","version":"1"},"$":{"source":"declare const alarm: cloudwatch.Alarm;\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);","version":"0"}},"location":{"api":{"api":"moduleReadme","moduleFqn":"@aws-cdk/aws-cloudwatch-actions"},"field":{"field":"markdown","line":37}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.OpsItemCategory","@aws-cdk/aws-cloudwatch-actions.OpsItemCategory#PERFORMANCE","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity#CRITICAL","@aws-cdk/aws-cloudwatch-actions.SsmAction","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":13,"130":1,"153":1,"169":1,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"8fc65ddcdcceb585281b97763f4a72976755bf6a5a84923b82f835eeb2567121"},"a5a29902b128d27bb61172bf60cfa09aa942f033a32371a7800b5d02c94dbd9b":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_applicationautoscaling as appscaling\nimport aws_cdk.aws_cloudwatch_actions as cloudwatch_actions\n\n# step_scaling_action: appscaling.StepScalingAction\n\napplication_scaling_action = cloudwatch_actions.ApplicationScalingAction(step_scaling_action)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.ApplicationAutoScaling;\nusing Amazon.CDK.AWS.CloudWatch.Actions;\n\nStepScalingAction stepScalingAction;\n\nvar applicationScalingAction = new ApplicationScalingAction(stepScalingAction);","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.applicationautoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.actions.*;\n\nStepScalingAction stepScalingAction;\n\nApplicationScalingAction applicationScalingAction = new ApplicationScalingAction(stepScalingAction);","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport appscaling \"github.com/aws-samples/dummy/awscdkawsapplicationautoscaling\"\nimport cloudwatch_actions \"github.com/aws-samples/dummy/awscdkawscloudwatchactions\"\n\nvar stepScalingAction stepScalingAction\n\napplicationScalingAction := cloudwatch_actions.NewApplicationScalingAction(stepScalingAction)","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch_actions from '@aws-cdk/aws-cloudwatch-actions';\n\ndeclare const stepScalingAction: appscaling.StepScalingAction;\nconst applicationScalingAction = new cloudwatch_actions.ApplicationScalingAction(stepScalingAction);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.ApplicationScalingAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-applicationautoscaling.StepScalingAction","@aws-cdk/aws-cloudwatch-actions.ApplicationScalingAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as appscaling from '@aws-cdk/aws-applicationautoscaling';\nimport * as cloudwatch_actions from '@aws-cdk/aws-cloudwatch-actions';\n\ndeclare const stepScalingAction: appscaling.StepScalingAction;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst applicationScalingAction = new cloudwatch_actions.ApplicationScalingAction(stepScalingAction);\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"130":1,"153":1,"169":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"290":1},"fqnsFingerprint":"e8d034a0a07d545d0c80fd721b603fa6a337258a30482b5468d219bb4d087806"},"36f009b0d3dea5056ddbf3b82017c1cca9928175f17848af1a22cd02750be0cf":{"translations":{"python":{"source":"# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_autoscaling as autoscaling\nimport aws_cdk.aws_cloudwatch_actions as cloudwatch_actions\n\n# step_scaling_action: autoscaling.StepScalingAction\n\nauto_scaling_action = cloudwatch_actions.AutoScalingAction(step_scaling_action)","version":"2"},"csharp":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.AutoScaling;\nusing Amazon.CDK.AWS.CloudWatch.Actions;\n\nStepScalingAction stepScalingAction;\n\nvar autoScalingAction = new AutoScalingAction(stepScalingAction);","version":"1"},"java":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.autoscaling.*;\nimport software.amazon.awscdk.services.cloudwatch.actions.*;\n\nStepScalingAction stepScalingAction;\n\nAutoScalingAction autoScalingAction = new AutoScalingAction(stepScalingAction);","version":"1"},"go":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport autoscaling \"github.com/aws-samples/dummy/awscdkawsautoscaling\"\nimport cloudwatch_actions \"github.com/aws-samples/dummy/awscdkawscloudwatchactions\"\n\nvar stepScalingAction stepScalingAction\n\nautoScalingAction := cloudwatch_actions.NewAutoScalingAction(stepScalingAction)","version":"1"},"$":{"source":"// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch_actions from '@aws-cdk/aws-cloudwatch-actions';\n\ndeclare const stepScalingAction: autoscaling.StepScalingAction;\nconst autoScalingAction = new cloudwatch_actions.AutoScalingAction(stepScalingAction);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.AutoScalingAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-autoscaling.StepScalingAction","@aws-cdk/aws-cloudwatch-actions.AutoScalingAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as autoscaling from '@aws-cdk/aws-autoscaling';\nimport * as cloudwatch_actions from '@aws-cdk/aws-cloudwatch-actions';\n\ndeclare const stepScalingAction: autoscaling.StepScalingAction;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst autoScalingAction = new cloudwatch_actions.AutoScalingAction(stepScalingAction);\n/// !hide\n// Code snippet ended before !hide marker above\n} }","syntaxKindCounter":{"10":2,"75":9,"130":1,"153":1,"169":1,"194":1,"197":1,"225":2,"242":2,"243":2,"254":2,"255":2,"256":2,"290":1},"fqnsFingerprint":"99cb1cf197c213c0ccecd800a7d1db5cc193ad4eb9b177fcce6ca5e6ead03cc1"},"2229e4eb607578f731682f5e8eab525f4a7d0d7bf5366c061863b8b11fc5b51f":{"translations":{"python":{"source":"# Alarm must be configured with an EC2 per-instance metric\n# alarm: cloudwatch.Alarm\n\n# Attach a reboot when alarm triggers\nalarm.add_alarm_action(\n    actions.Ec2Action(actions.Ec2InstanceAction.REBOOT))","version":"2"},"csharp":{"source":"// Alarm must be configured with an EC2 per-instance metric\nAlarm alarm;\n\n// Attach a reboot when alarm triggers\nalarm.AddAlarmAction(\nnew Ec2Action(Ec2InstanceAction.REBOOT));","version":"1"},"java":{"source":"// Alarm must be configured with an EC2 per-instance metric\nAlarm alarm;\n\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\nnew Ec2Action(Ec2InstanceAction.REBOOT));","version":"1"},"go":{"source":"// Alarm must be configured with an EC2 per-instance metric\nvar alarm alarm\n\n// Attach a reboot when alarm triggers\nalarm.AddAlarmAction(\nactions.NewEc2Action(actions.Ec2InstanceAction_REBOOT))","version":"1"},"$":{"source":"// Alarm must be configured with an EC2 per-instance metric\ndeclare const alarm: cloudwatch.Alarm;\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\n  new actions.Ec2Action(actions.Ec2InstanceAction.REBOOT),\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.Ec2Action"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.Ec2Action","@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction","@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction#REBOOT","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// Alarm must be configured with an EC2 per-instance metric\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\n  new actions.Ec2Action(actions.Ec2InstanceAction.REBOOT),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":10,"130":1,"153":1,"169":1,"194":4,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"56fe0639fa78e1b1e51bdcf1bab9528e965e8a51e3f2403a494721833c6091c8"},"37485f08af136f8bd44580a1937d6d39ee22db4c107d478e558975274d26b4c8":{"translations":{"python":{"source":"# Alarm must be configured with an EC2 per-instance metric\n# alarm: cloudwatch.Alarm\n\n# Attach a reboot when alarm triggers\nalarm.add_alarm_action(\n    actions.Ec2Action(actions.Ec2InstanceAction.REBOOT))","version":"2"},"csharp":{"source":"// Alarm must be configured with an EC2 per-instance metric\nAlarm alarm;\n\n// Attach a reboot when alarm triggers\nalarm.AddAlarmAction(\nnew Ec2Action(Ec2InstanceAction.REBOOT));","version":"1"},"java":{"source":"// Alarm must be configured with an EC2 per-instance metric\nAlarm alarm;\n\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\nnew Ec2Action(Ec2InstanceAction.REBOOT));","version":"1"},"go":{"source":"// Alarm must be configured with an EC2 per-instance metric\nvar alarm alarm\n\n// Attach a reboot when alarm triggers\nalarm.AddAlarmAction(\nactions.NewEc2Action(actions.Ec2InstanceAction_REBOOT))","version":"1"},"$":{"source":"// Alarm must be configured with an EC2 per-instance metric\ndeclare const alarm: cloudwatch.Alarm;\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\n  new actions.Ec2Action(actions.Ec2InstanceAction.REBOOT),\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.Ec2Action","@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction","@aws-cdk/aws-cloudwatch-actions.Ec2InstanceAction#REBOOT","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\n// Alarm must be configured with an EC2 per-instance metric\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Attach a reboot when alarm triggers\nalarm.addAlarmAction(\n  new actions.Ec2Action(actions.Ec2InstanceAction.REBOOT),\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":10,"130":1,"153":1,"169":1,"194":4,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"56fe0639fa78e1b1e51bdcf1bab9528e965e8a51e3f2403a494721833c6091c8"},"a31739eebfe59abd83c0354643d6402283ed6b227a920157daa9f1ba4b273862":{"translations":{"python":{"source":"# alarm: cloudwatch.Alarm\n\n# Create an OpsItem with specific severity and category when alarm triggers\nalarm.add_alarm_action(\n    actions.SsmAction(actions.OpsItemSeverity.CRITICAL, actions.OpsItemCategory.PERFORMANCE))","version":"2"},"csharp":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"java":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"go":{"source":"var alarm alarm\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nactions.NewSsmAction(actions.OpsItemSeverity_CRITICAL, actions.OpsItemCategory_PERFORMANCE))","version":"1"},"$":{"source":"declare const alarm: cloudwatch.Alarm;\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.OpsItemCategory"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.OpsItemCategory","@aws-cdk/aws-cloudwatch-actions.OpsItemCategory#PERFORMANCE","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity#CRITICAL","@aws-cdk/aws-cloudwatch-actions.SsmAction","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":13,"130":1,"153":1,"169":1,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"8fc65ddcdcceb585281b97763f4a72976755bf6a5a84923b82f835eeb2567121"},"5a677d98fc45b6dd4ba2e8c49047559cddd95f5a346cf0f30ba714038820b104":{"translations":{"python":{"source":"# alarm: cloudwatch.Alarm\n\n# Create an OpsItem with specific severity and category when alarm triggers\nalarm.add_alarm_action(\n    actions.SsmAction(actions.OpsItemSeverity.CRITICAL, actions.OpsItemCategory.PERFORMANCE))","version":"2"},"csharp":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"java":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"go":{"source":"var alarm alarm\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nactions.NewSsmAction(actions.OpsItemSeverity_CRITICAL, actions.OpsItemCategory_PERFORMANCE))","version":"1"},"$":{"source":"declare const alarm: cloudwatch.Alarm;\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.OpsItemCategory","@aws-cdk/aws-cloudwatch-actions.OpsItemCategory#PERFORMANCE","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity#CRITICAL","@aws-cdk/aws-cloudwatch-actions.SsmAction","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":13,"130":1,"153":1,"169":1,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"8fc65ddcdcceb585281b97763f4a72976755bf6a5a84923b82f835eeb2567121"},"bb281f03cd596e2862cba39d6221fedd1839c50b5cf0a5cb4c0437431402d397":{"translations":{"python":{"source":"import aws_cdk.aws_cloudwatch_actions as cw_actions\n# alarm: cloudwatch.Alarm\n\n\ntopic = sns.Topic(self, \"Topic\")\nalarm.add_alarm_action(cw_actions.SnsAction(topic))","version":"2"},"csharp":{"source":"using Amazon.CDK.AWS.CloudWatch.Actions;\nAlarm alarm;\n\n\nvar topic = new Topic(this, \"Topic\");\nalarm.AddAlarmAction(new SnsAction(topic));","version":"1"},"java":{"source":"import software.amazon.awscdk.services.cloudwatch.actions.*;\nAlarm alarm;\n\n\nTopic topic = new Topic(this, \"Topic\");\nalarm.addAlarmAction(new SnsAction(topic));","version":"1"},"go":{"source":"import cw_actions \"github.com/aws-samples/dummy/awscdkawscloudwatchactions\"\nvar alarm alarm\n\n\ntopic := sns.NewTopic(this, jsii.String(\"Topic\"))\nalarm.AddAlarmAction(cw_actions.NewSnsAction(topic))","version":"1"},"$":{"source":"import * as cw_actions from '@aws-cdk/aws-cloudwatch-actions';\ndeclare const alarm: cloudwatch.Alarm;\n\nconst topic = new sns.Topic(this, 'Topic');\nalarm.addAlarmAction(new cw_actions.SnsAction(topic));","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.SnsAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.SnsAction","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction","@aws-cdk/aws-sns.ITopic","@aws-cdk/aws-sns.Topic","constructs.Construct"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\nimport * as cw_actions from '@aws-cdk/aws-cloudwatch-actions';\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Construct } from 'constructs';\nimport { Stack, Duration } from '@aws-cdk/core';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\nimport * as route53 from '@aws-cdk/aws-route53';\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as lambda from '@aws-cdk/aws-lambda';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n\nconst topic = new sns.Topic(this, 'Topic');\nalarm.addAlarmAction(new cw_actions.SnsAction(topic));\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n\n\n","syntaxKindCounter":{"10":2,"75":12,"104":1,"130":1,"153":1,"169":1,"194":3,"196":1,"197":2,"225":2,"226":1,"242":2,"243":2,"254":1,"255":1,"256":1,"290":1},"fqnsFingerprint":"44eb2eab2551bd49714e56df6030e91edab975a0d17f5e4cf8d6560aadbc363f"},"1337011a8c38fc590aed76ae175225386f4454c4ecda7237363b20109da277b8":{"translations":{"python":{"source":"# alarm: cloudwatch.Alarm\n\n# Create an OpsItem with specific severity and category when alarm triggers\nalarm.add_alarm_action(\n    actions.SsmAction(actions.OpsItemSeverity.CRITICAL, actions.OpsItemCategory.PERFORMANCE))","version":"2"},"csharp":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"java":{"source":"Alarm alarm;\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\nnew SsmAction(OpsItemSeverity.CRITICAL, OpsItemCategory.PERFORMANCE));","version":"1"},"go":{"source":"var alarm alarm\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.AddAlarmAction(\nactions.NewSsmAction(actions.OpsItemSeverity_CRITICAL, actions.OpsItemCategory_PERFORMANCE))","version":"1"},"$":{"source":"declare const alarm: cloudwatch.Alarm;\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);","version":"0"}},"location":{"api":{"api":"type","fqn":"@aws-cdk/aws-cloudwatch-actions.SsmAction"},"field":{"field":"example"}},"didCompile":true,"fqnsReferenced":["@aws-cdk/aws-cloudwatch-actions.OpsItemCategory","@aws-cdk/aws-cloudwatch-actions.OpsItemCategory#PERFORMANCE","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity","@aws-cdk/aws-cloudwatch-actions.OpsItemSeverity#CRITICAL","@aws-cdk/aws-cloudwatch-actions.SsmAction","@aws-cdk/aws-cloudwatch.Alarm#addAlarmAction","@aws-cdk/aws-cloudwatch.IAlarmAction"],"fullSource":"// Hoisted imports begin after !show marker below\n/// !show\ndeclare const alarm: cloudwatch.Alarm;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport { Stack } from '@aws-cdk/core';\nimport { Construct } from 'constructs';\nimport * as actions from '@aws-cdk/aws-cloudwatch-actions';\nimport * as cloudwatch from '@aws-cdk/aws-cloudwatch';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n    // Code snippet begins after !show marker below\n/// !show\n\n// Create an OpsItem with specific severity and category when alarm triggers\nalarm.addAlarmAction(\n  new actions.SsmAction(\n    actions.OpsItemSeverity.CRITICAL,\n    actions.OpsItemCategory.PERFORMANCE // category is optional\n  )\n);\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}","syntaxKindCounter":{"75":13,"130":1,"153":1,"169":1,"194":6,"196":1,"197":1,"225":1,"226":1,"242":1,"243":1,"290":1},"fqnsFingerprint":"8fc65ddcdcceb585281b97763f4a72976755bf6a5a84923b82f835eeb2567121"}}}